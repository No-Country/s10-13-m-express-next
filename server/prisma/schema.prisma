// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String
  birthday     DateTime?
  phone        String
  email        String       @unique
  role         role?
  password     String
  bannerImage  String?      @default("https://images.unsplash.com/photo-1461532257246-777de18cd58b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1476&q=80")
  username     String       @unique
  profileImage String?      @default("https://images.unsplash.com/photo-1639628735078-ed2f038a193e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1374&q=80")
  orgName      String?
  posts        Posts[]
  volunteers   Volunteers[]
  initiatives  Initiative[]
  reviews      Review[]
  donations    Donation[]
}

model Posts {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  description String
  createdAt   DateTime @default(now())
  galery      String?
}

model Session {
  id      String      @id @default(auto()) @map("_id") @db.ObjectId
  expires DateTime
  session SessionInfo
  userId  String?
  //NO AGREGAR NINGUNA COSA MAS
  //NO RELACIONAR CON NADA MAS
  //NO TOCAR!!!
}

type SessionInfo {
  user      UserSession
  sessionId String
}

type UserSession {
  userId String
}

model Initiative {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  deadLine      DateTime
  startDate     DateTime
  endDate       DateTime
  galery        String?
  thumbnail     String?      @default("https://res.cloudinary.com/dygpgsiei/image/upload/v1693699459/y48ke3c8mlgwjuksqmi1.webp")
  volunteers    Volunteers[]
  opportunities String[]
  country       String
  province      String
  adress        String
  reviewsId     String[]     @db.ObjectId
  postsId       String[]     @db.ObjectId
  reviews       Review[]
  ownerId       String       @db.ObjectId
  owner         User         @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  startHour     String
  endHour       String
  extraInfo     String
  themes        String[]
  donations     Donation[]
  createdAt     DateTime     @default(now()) @map("_created_at")
  updatedAt     DateTime     @updatedAt @map("_updated_at")
}

model Volunteers {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  volunteersId String     @db.ObjectId
  volunteer    Initiative @relation(fields: [volunteersId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
  userId       String     @db.ObjectId
  status       Status     @default(pending)
  createdAt    DateTime   @default(now()) @map("_created_at")
  updatedAt    DateTime   @updatedAt @map("_updated_at")
}

model Review {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  body          String
  dateReview    DateTime    @default(now())
  userIDs       String?     @db.ObjectId
  users         User?       @relation(fields: [userIDs], references: [id])
  initiativeId  String?     @db.ObjectId
  initiative    Initiative? @relation(fields: [initiativeId], references: [id])
}

model Donation {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  TransactionId String
  amount        Int
  createdAt    DateTime    @default(now())
  userId        String      @db.ObjectId
  user          User?       @relation(fields: [userId], references: [id])
  initiativeID  String?      @db.ObjectId
  initiative    Initiative? @relation(fields: [initiativeID], references: [id])
  isGlobalDonation Boolean  @default(false)
}

enum role {
  volunteer
  organization
}

enum Status {
  pending
  acepted
  refused
}
