// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  lastName          String
  phone             String
  email             String      @unique
  role              role?
  password          String
  profileImage      String?
  volunteering      Volunteers[]
  initiatives       Initiative[] @relation(name: "UserInitiatives")
  
}

enum role {
  volunteer
  organization
}

model Session {
  id    String      @id @default(auto()) @map("_id") @db.ObjectId
  expires DateTime
  session SessionInfo
}

type SessionInfo {
  user UserSession
}

type UserSession {
  userId String
}


model Initiative {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  description       String
  deadLine          DateTime
  startDate         DateTime
  endDate           DateTime
  galery            String?
  thumbnail         String?

  volunteers        Volunteers[] @relation(name: "InitiativeVolunteering")
  //volunteers        User   @relation(name: "UserVolunteering", fields: [volunteersArr.volunteersId], references: [id])

  ownerId           String @db.ObjectId
  user              User   @relation(name: "UserInitiatives", fields: [ownerId], references: [id])

  categoryId        String @db.ObjectId
//  categories        Category   @relation(name: "InitiativeCategories", fields: [categoryId], references: [id])

  reviewsId         String[] @db.ObjectId
// review            Review   @relation(name: "InitiativeReviews", fields: [reviewsId], references: [id])

  postsId           String[] @db.ObjectId
// post              Post   @relation(name: "InitiativePosts", fields: [postsId], references: [id])

  createdAt         DateTime @map("_created_at") @default(now())
  updatedAt         DateTime @map("_updated_at") @updatedAt
}

model Volunteers{
  id            String          @id @default(auto()) @map("_id") @db.ObjectId

  volunteersId  String          @db.ObjectId
  volunteer     Initiative      @relation(name: "InitiativeVolunteering", fields: [volunteersId], references: [id])
  
  user          User            @relation(fields: [userId], references: [id])
  userId        String          @db.ObjectId

  status        Status          @default(pending)

  createdAt     DateTime        @map("_created_at") @default(now())
  updatedAt     DateTime        @map("_updated_at") @updatedAt
}

enum Status {
  pending
  acepted
  refused
}